version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    depends_on:
      - db
      - redis
    environment:
      - APP_ENV=local
      - DB_HOST=db           # Use the container name of your MySQL service
      - DB_PORT=3306
      - DB_DATABASE=laravel  # Adjust these as needed
      - DB_USERNAME=laravel
      - DB_PASSWORD=laravel
      - QUEUE_CONNECTION=redis
    networks:
      - laravel_network
  # reverb:
  #       build:
  #           context: .
  #           dockerfile: reverb/Dockerfile
  #       container_name: reverb
  #       ports:
  #           - 8080:8080
  #       volumes:
  #           - app-data:/var/www/html
  #       working_dir: /var/www/html
  #       networks:
  #           - network
  #       depends_on:
  #           - app
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    ports:
      - "3336:3306"   # Host port 3336 mapped to container's 3306
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel_network

  redis:
    image: redis:alpine
    container_name: redis_cache
    restart: unless-stopped
    networks:
      - laravel_network
  nginx:
    image: nginx:alpine
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      # - "8000:80"       # Host port 81 mapped to container's port 80 (default for Nginx)
      - "8080:80" # WebSocket for Reverb
      - "6001:6001" # Laravel Echo WebSocket
      - "3000:3000" # Vite dev server’s port on dev
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}' # Vite dev server’s port 
    volumes:
      - .:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel_network
  node:
    image: node:20
    container_name: node_dev
    working_dir: /var/www
    volumes:
      - .:/var/www
    command: sh -c "npm cache clean -f && npm install && npm run dev"
    networks:
      - laravel_network
volumes:
  dbdata:
networks:
  laravel_network:
    driver: bridge
