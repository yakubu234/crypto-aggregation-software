name: Laravel

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    # Add MySQL service
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.3'
          extensions: redis
      - uses: actions/checkout@v4
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: remove laravel/sanctum
        run: composer remove laravel/sanctum -q --no-ansi --no-interaction --no-scripts --no-progress 
      - name: Clear vendor directory
        run: rm -rf vendor 
      - name: Update Dependencies
        run: composer update -q --no-ansi --no-interaction --no-scripts --no-progress 
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install laravel/sanctum
        run: composer require laravel/sanctum -q --no-ansi --no-interaction --no-scripts --no-progress 
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Regenerate Autoload Files
        run: composer dump-autoload
      - name: Install Dependencies (Again)
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}-fresh
          restore-keys: |
            ${{ runner.os }}-composer-
      # Update your .env file to use MySQL instead of SQLite
      - name: Update .env for MySQL
        run: |
          sed -i 's/DB_CONNECTION=sqlite/DB_CONNECTION=mysql/' .env
          sed -i 's|DB_DATABASE=.*|DB_DATABASE=test_db|' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=user/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=password/' .env
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      - name: Install Node dependencies and build assets
        run: |
          npm install
          npm run build
      - name: Run Migrations
        run: php artisan migrate --force
      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: test_db
          DB_USERNAME: user
          DB_PASSWORD: password
        run: php artisan test
